?vector
source('D:/南科大/硕士/环境科学的中编程/Assignment1/PS1_5.R')
library(gtools)
source('D:/南科大/硕士/环境科学的中编程/Assignment1/PS1_5.R')
source('D:/南科大/硕士/环境科学的中编程/Assignment1/PS1_3.R')
install.packages(ggplot2)
install.packages('ggplot2')
install.packages('tidyr')
install.packages('dplyr')
install.packages('gtools')
install.packages("gtools")
Sig_Eqs %>%
select(TOTAL_DEATH,COUNTRY)
Sig_Eqs=as_tibble(read.delim('signif.txt'))
setwd('D:/南科大/硕士/环境科学的中编/Assignment2')
setwd('D:/南科大/硕士/环境科学的中编/Assignment2/')
setwd('D:/南科大/硕士/环境科学的中编程/Assignment2/')
Sig_Eqs=as_tibble(read.delim('signif.txt'))
Sig_Eqs %>%
select(TOTAL_DEATH,COUNTRY)
Sig_Eqs %>%
select(TOTAL_DEATHS,COUNTRY)
Sig_Eqs$TOTAL_DEATHS[1]+Sig_Eqs$TOTAL_DEATHS[2]
Sig_Eqs$TOTAL_DEATHS[2]
Sig_Eqs$TOTAL_DEATHS[1]
is.na(Sig_Eqs$TOTAL_DEATHS[1])
~is.na(Sig_Eqs$TOTAL_DEATHS[1])
!is.na(Sig_Eqs$TOTAL_DEATHS[1])
Sig_Eqs %>%
select(TOTAL_DEATHS,COUNTRY) %>%
filter(!is.na(TOTAL_DEATHS)) %>%
group_by(COUNTRY) %>%
summarise(sum(TOTAL_DEATHS))
Sig_Eqs %>%
select(TOTAL_DEATHS,COUNTRY) %>%
filter(!is.na(TOTAL_DEATHS)) %>%
group_by(COUNTRY) %>%
summarise(sum(TOTAL_DEATHS)) %>%
arrange(`sum(TOTAL_DEATHS)`)
Sig_Eqs %>%
select(TOTAL_DEATHS,COUNTRY) %>%
filter(!is.na(TOTAL_DEATHS)) %>%
group_by(COUNTRY) %>%
summarise(sum(TOTAL_DEATHS)) %>%
arrange(desc(`sum(TOTAL_DEATHS)`))
Sig_Eqs=as_tibble(read.delim('signif.txt'))
# 1.1
Sig_Eqs %>%
select(TOTAL_DEATHS,COUNTRY) %>%
filter(!is.na(TOTAL_DEATHS)) %>%
group_by(COUNTRY) %>%
summarise(sum(TOTAL_DEATHS)) %>%
arrange(desc(`sum(TOTAL_DEATHS)`))
# 1.2
Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
# 1.2
times=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
View(times)
# 1.2
times=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT) %>%
filter(EQ_PRIMARY>6) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
# 1.2
times=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT,EQ_PRIMARY) %>%
filter(EQ_PRIMARY>6) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
View(Sig_Eqs)
View(times)
Sig_Eqs=as_tibble(read.delim('signif.txt'))
# 1.1
Sig_Eqs %>%
select(TOTAL_DEATHS,COUNTRY) %>%
filter(!is.na(TOTAL_DEATHS)) %>%
group_by(COUNTRY) %>%
summarise(sum(TOTAL_DEATHS)) %>%
arrange(desc(`sum(TOTAL_DEATHS)`))
# 1.2
times=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT,EQ_PRIMARY) %>%
filter(EQ_PRIMARY>6) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
# 1.2
times=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT,EQ_PRIMARY) %>%
#filter(EQ_PRIMARY>6) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
# 1.23
times=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(YEAR,COUNT,EQ_PRIMARY) %>%
filter(EQ_PRIMARY>6) %>%
group_by(YEAR) %>%
summarise(TIMES=sum(COUNT))
View(times)
ggplot(aes(x=times$year,y=times$TIMES))+geom_line()
plot(x=times$year,y=times$TIMES)
plot(x=times$YEAR,y=times$TIMES)
plot(x=times$YEAR,y=times$TIMES,type='l')
country="CHINA"
time=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(COUNTRY,COUNT) %>%
filter(COUNTRY=country) %>%
summarise(sum(COUNT))
time=Sig_Eqs %>%
mutate(COUNT=1) %>%
select(COUNTRY,COUNT) %>%
filter(COUNTRY==country) %>%
summarise(sum(COUNT))
View(time)
time
time[1,1]
time[1]
time$`sum(COUNT)`[1]
printf(paste0(time$`sum(COUNT)`[1],' times of significant earthquake +
happened in ',country,' .'))
print(paste0(time$`sum(COUNT)`[1],' times of significant earthquake +
happened in ',country,' .'))
#}
print(paste0(time$`sum(COUNT)`[1],' times of significant earthquake happened in ',country,' .'))
print(paste0(time$`sum(COUNT)`[1],' times of significant earthquake happened in ',country,'.'))
print(paste0(time$`sum(COUNT)`[1],'
times of significant earthquake happened in ',country,'.'))
View(Sig_Eqs)
group=Sig_Eqs %>%
select(EQ_PRIMARY,YEAR,MONTH,DAY,COUNTRY) %>%
filter(COUNTRY) %>%
arrange(desc(EQ_PRIMARY))
group=Sig_Eqs %>%
select(EQ_PRIMARY,YEAR,MONTH,DAY,COUNTRY) %>%
filter(COUNTRY==country) %>%
arrange(desc(EQ_PRIMARY))
View(group)
group=Sig_Eqs %>%
select(EQ_PRIMARY,YEAR,MONTH,DAY,COUNTRY) %>%
filter(COUNTRY==country) %>%
arrange(desc(EQ_PRIMARY))
View(group)
source('D:/南科大/硕士/环境科学的中编程/Assignment2/PS2_1.R')
source('D:/南科大/硕士/环境科学的中编程/Assignment2/PS2_1.R')
CountEq_LargestEq('CHINA')
View(group)
CountEq_LargestEq('JAPAN')
CountEq_LargestEq(Sig_Eqs$COUNTRY)
Sig_Eqs$COUNTRY
countries=unique(Sig_Eqs$COUNTRY)
CountEq_LargestEq(countries)
countries=unique(Sig_Eqs$COUNTRY)
result=dara.frame('',NaN,NaN,NaN,NaN)
for(i in 1:length(countries)){
result[i,1]=countries[1]
result[i,2:5]=CountEq_LargestEq(countries[i])
}
countries=unique(Sig_Eqs$COUNTRY)
result=dara.frame('',NaN,NaN,NaN,NaN)
countries=unique(Sig_Eqs$COUNTRY)
result=data.frame('',NaN,NaN,NaN,NaN)
for(i in 1:length(countries)){
result[i,1]=countries[1]
result[i,2:5]=CountEq_LargestEq(countries[i])
}
View(result)
countries=unique(Sig_Eqs$COUNTRY)
result=data.frame('',NaN,NaN,NaN,NaN)
for(i in 1:length(countries)){
result[i,1]=countries[i]
result[i,2:5]=CountEq_LargestEq(countries[i])
}
View(result)
result(is.na(result))='missing'
result[]is.na(result)]='missing'
result[is.na(result)]='missing'
View(result)
wrtie.csv(result,file='result,csv')
write.csv(result,file='result,csv')
write.csv(result,file='result.csv')
countries=unique(Sig_Eqs$COUNTRY)
result=data.frame('',NaN,NaN,NaN,NaN)
for(i in 1:length(countries)){
result[i,1]=countries[i]
result[i,2:5]=CountEq_LargestEq(countries[i])
}
colnames(result)=c('COUNTRY','TOTAL_EARTHQUAKE','YEAR','MONTH','DAY')
#result[is.na(result)]='missing'
write.csv(result,file='result.csv')
read.csv('result.csv')
a=read.csv('result.csv')
View(a)
View(result)
source('D:/南科大/硕士/环境科学的中编程/Assignment2/PS2_1.R')
source('D:/南科大/硕士/环境科学的中编程/Assignment2/PS2_2.R')
rawdata=read.csv('2281305.csv',)
data=data.frame('',NaN,NaN,'',NaN,NaN)
colnames(data)=c('year_month','angle','angle_q','type','speed','speed_q')
data=as_tibble(data)
for(i in 1:nrow(rawdata)){
data[i,1]=paste0(substr(rawdata$DATE[i],1,4),substr(rawdata$DATE[i],6,7))
str=rawdata$WND[i]
data[i,2]=as.numeric(substr(str,1,3))
data[i,3]=as.numeric(substr(str,5,5))
data[i,4]=substr(str,7,7)
data[i,5]=as.numeric(substr(str,9,12))
data[i,6]=as.numeric(substr(str,14,14))
}
load('data.RData')
month_mean=data %>%
select(year_month,speed,speed_q,angle_q) %>%
filter(speed_q==1 & angle_q==1) %>%
group_by(year_month) %>%
summarize(mean_speed=mean(speed))
month_mean %>%
ggplot(aes(x=month,y=mean_speed,color=year))
View(month_mean)
month_mean %>%
ggplot(aes(x=year_month,y=mean_speed,color=year))
month_mean %>%
ggplot(aes(x=year_month,y=mean_speed,color=year))
month_mean=data %>%
select(year_month,speed,speed_q,angle_q) %>%
filter(speed_q==1 & angle_q==1) %>%
group_by(year_month) %>%
summarize(mean_speed=mean(speed))
month_mean %>%
ggplot(aes(x=year_month,y=mean_speed,color=year))
View(month_mean)
View(data)
View(rawdata)
month_mean %>%
plot(x=year_month,y=mean_speed,type='l')
month_mean %>%
plot(x=year_month,y=mean_speed,type='l')
plot(x=month_mean$year_month,y=month_mean$mean_speed,type='l')
View(month_mean)
View(data)
View(month_mean)
month_mean
month_mean %>%
mutate(date=NaN)
View(month_mean)
month_mean %>%
mutate(date=NaN)
month_mean=month_mean %>%
mutate(date=NaN)
View(month_mean)
for(i in 1:nrow(month_mean)){
month_mean$date[i]=as.numeric(substr(month_mean$year_month[i],1,4))+as.numeric(substr(month_mean$year_month[i],5,6))/12
}
View(month_mean)
plot(month_mean$date,month_mean$mean_speed)
plot(month_mean$date,month_mean$mean_speed,type='l')
rawdata=read.csv('AQ_FSPMC-20180101-20200311.csv',header=F,skip=9,sep=',')
data=data.frame(NaN,NaN,NaN,NaN,NaN)
colnames(data)=c('year','month','day','hour','conc')
data=as_tibble(data)
for(i in 1:nrow(rawdata)){
str=rawdata$V1[i]
data[i,1]=as.numeric(substr(str,1,4))
data[i,2]=as.numeric(substr(str,6,7))
data[i,3]=as.numeric(substr(str,9,10))
data[i,4]=as.numeric(substr(str,12,13))
data[i,5]=as.numeric(rawdata$V2[i])
}
data=as_tibble(data)
month_mean=data %>%
filter(conc!=-99999) %>%
group_by(year,month) %>%
summarise(mean_conc=mean(conc))
month_mean=as_tibble(month_mean)
# monthly concentration figure
month_mean %>%
ggplot(aes(x=month,y=mean_conc,color=year)) +
geom_line() +
facet_wrap(~ year)
